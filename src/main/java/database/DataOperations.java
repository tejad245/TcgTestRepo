package database;

import java.util.ArrayList;
import java.util.List;

import models.WeatherData;
import models.WeatherDetails;

public class DataOperations {

	/**
	 * 
	 * @param username
	 * @param postalcode
	 * @returns autogenerated id after adding user to database
	 */
	public int addUser(String username , String postalcode) {
		int id=0;
		try {
			id=DatabaseConnection.insertUpdateFromSqlQuery(username,postalcode);
		} catch (Exception ex) {
	    	System.out.println("The error thrown : "+ ex.getMessage());
            ex.printStackTrace();
	    }
		return id;
	}

	/**
	 * 
	 * @param timestamp
	 * @param latitude
	 * @param longititude
	 * @param description
	 * @param temperature
	 * @param humidity
	 * @param wind_speed
	 * @param id
	 * @return WeatehrDetails after adding to the database
	 */
	public WeatherDetails addWeatherDetails(String timestamp, double latitude, double longititude, String description,
			double temperature, int humidity, double wind_speed, int id) {
		WeatherDetails  weatherDetails=new WeatherDetails();;
		 try {
		         DatabaseConnection.insertUpdateFromSqlQueryWeather(timestamp,latitude,longititude,description
		        		,temperature,humidity,wind_speed,id);
		        
		          weatherDetails.setTimestamp(timestamp);
		          weatherDetails.setLatitude(latitude);
		          weatherDetails.setLongititude(longititude);
		          weatherDetails.setDescription(description);
		          weatherDetails.setTemperature(temperature);
		          weatherDetails.setHumidity(humidity);
		          weatherDetails.setWind_speed(wind_speed);
		          weatherDetails.setId(id);
		            
		    } catch (Exception ex) {
		    	System.out.println("The error thrown : "+ ex.getMessage());
	            ex.printStackTrace();
		    }
		return weatherDetails;
	}
	
	/**
	 * 
	 * @param args
	 * @param type
	 * @return list of weatherdata history for  usernae and postalcode
	 */
	public  List<WeatherData> getDetails(String SqlQueryString,String param) {
		
		 List<WeatherData> weatherList=new ArrayList<>();
		 try {
			 String s = "SELECT w.timestamp, w.latitude, w.longititude, w.description, " +
                     "w.temperature, w.humidity, w.wind_speed " +
                     "FROM weather_history w " +
                     "JOIN user_postaldetails c ON w.user_postal_id = c.id ";
			
			 //if param is postlcode , we make postalcode condition else username , same query for both param
			 String query=(param=="postalcode") ? s+ "WHERE c.postalcode = ?": s+ "WHERE c.username = ?";
			 String queryLimit=query+"limit 20";
			 weatherList = DatabaseConnection.getResultFromSqlQuery(queryLimit,SqlQueryString);
			 System.out.println(weatherList+" in get details");
		    } catch (Exception ex) {
		    	System.out.println("The error thrown : "+ ex.getMessage());
	            ex.printStackTrace();
		    }
		 return weatherList;
		}
}
